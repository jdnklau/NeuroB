package neurob.core.features.interfaces;

import java.util.List;

import de.prob.statespace.StateSpace;
import neurob.exceptions.NeuroBException;

/**
 * Generates the features of a predicate.
 * 
 * <p>
 * Usage example:
 * <br>
 * <pre><code>
 * // get a list of predicates
 * {@code List<String>} predicates = ...
 * 
 * Features f = ... // Create instance of a class implementing the interface
 * 
 * // input data
 * for(String pred : predicates){
 *     f.addData(pred)
 * }
 * 
 * // Access features
 * // getFeatures() returns a {@code List<String>} object
 * for(feature : f.getFeatureStrings()){
 *     System.out.println(feature);
 * }
 * <code></pre>
 * @author jannik
 *
 */
public interface Features {
	
	/**
	 * Input a given string and add its features as data to this feature object.
	 * <br>
	 * Use {@link #getFeatureStrings()} to access the output computed.
	 * @param predicate
	 * @see #getFeatureStrings()
	 * @throws NeuroBException
	 */
	public void addData(String predicate) throws NeuroBException;

//	/**
//	 * Set a given state space as input for this feature object.
//	 * <br>
//	 * Use {@link #getFeatureStrings()} to access the output computed.
//	 * @param stateSpace
//	 * @see #setData(String)
//	 * @see #getFeatureStrings()
//	 * @throws NeuroBException
//	 */
//	public void setData(StateSpace stateSpace) throws NeuroBException;
	
//	/**
//	 * Input a liust of strings and set it as data in this feature object.
//	 * <br>
//	 * Use {@link #getFeatureStrings()} to access the output computed.
//	 * @param data
//	 * @see #setData(StateSpace)
//	 * @see #setData(String)
//	 * @see #getFeatureStrings()
//	 * @param data
//	 * @throws NeuroBException
//	 */
//	public void setData(List<String> data) throws NeuroBException;
	
	/**
	 * Access the features generated by this class.
	 * <br> The features are stored in a list; implementation of this list is up to 
	 * the individual implementing subclasses of this interface.
	 * <p>
	 * To generate the features, make use of the {@link #setData(StateSpace))} or {@link #addData(String)} methods.
	 * </p>
	 * @return A list of {@link String}s, representing the features generated
	 * @see #addData(StateSpace)
	 * @see #addData(List)
	 * @see #addData(String)
	 */
	public List<String> getFeatureStrings();
	
	/**
	 * Returns the dimension of produced feature vectors
	 * @return
	 */
	public int getfeatureDimension();
	
	/**
	 * Resets the input data
	 */
	public void reset();
}
